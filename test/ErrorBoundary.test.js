import React, { Component }  from 'react';
import { mount, shallow } from 'enzyme';
import ErrorBoundary from "../src/error/ErrorBoundary";

class ComponentWithError extends Component {
    render() {
        throw new Error('No Movies Found!');

      return (
        <div>
          <input type = "text" value = {null}/>  
        </div>
      );
    }
}

describe('<ErrorBoundary> window',()=> {
    test('should match the snapshot', () => {
      const tree = mount(<ErrorBoundary>Test</ErrorBoundary> )
      expect(tree).toMatchSnapshot()
    })
  
    test('displays error message on error generated by child', () => {
      const wrapper = shallow(
        <ErrorBoundary > 
          <ComponentWithError />
        </ErrorBoundary> 
        )
       expect(() => { wrapper.html(); }).toThrowError('No Movies Found!');
    })
})